type Project
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Managers"], queries: [get, list], mutations: [create, update, delete] }
      { allow: groups, groups: ["Employees"], queries: [get, list], mutations: [create] }
    ]
  ) {
  id: ID!
  name: String
  noOfBlocks: String
  address: String
  comments: String
  blocks: [Blocks]
  createdBy: String
  createdDate: String
}

type Blocks {
  name: String
  carParkingArea: String
  noOfUnits: Int
  noOfFloors: Int
  floors: [Floors]
  basementHeight: String
}

type Floors {
  name: String
  floorNo: Int
  ceilingHeight: String
}

type Contractor
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Managers"], queries: [get, list], mutations: [create, update, delete] }
      { allow: groups, groups: ["Employees"], queries: [get, list], mutations: [create] }
    ]
  ) {
    id: ID!
    name: String
    workType: String
    mobile: String
    emailId: String
    createdBy: String
    createdDate: String
}

type Item
@model
@auth(
  rules: [
    { allow: groups, groups: ["Managers"], queries: [get, list], mutations: [create, update, delete] }
    { allow: groups, groups: ["Employees"], queries: [get, list], mutations: [] }
  ]
) {
  id: ID!
  name: String
  itemType: String
  itemUnit: [itemUnits]
  rate: Int
  gst: Boolean
  cgst: Int
  sgst: Int
  igst: Int
  description: String
  createdBy: String
  createdDate: String
}

type itemUnits {
  no: Boolean
  meter: Boolean
  milliMeter: Boolean
  length: Boolean
  feet: Boolean
  inch: Boolean
  kg: Boolean
  gram: Boolean
  milliGram: Boolean
  ton: Boolean
  litre: Boolean
  milliLitre: Boolean
  dozen: Boolean
  coil: Boolean
  squareFeet: Boolean
  cubicFeet: Boolean
  squareMeter: Boolean
  cubicMeter: Boolean
}

